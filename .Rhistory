diabetes <- read.csv("data/diabetes.csv")
diabetes
diabetes <- read.csv("data/No-show-Issue-Comma-300k.csv")
diabetes <- read.csv("data/No-show-Issue-Comma-300k.csv")
diabetes
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
noShow
str(noShow)
table(noShow$ApointmentData)
colnames(noShow)
setwd("data")
getwd()
getwd()
getwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
getwd()
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
str(noShow)
noShow$ApointmentData
table(noShow$ApointmentData)
library(stringr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
table(noShow$ApointmentData_fix)
str(noShow)
noShow$ApointmentData_fix <- as.date(noShow$ApointmentData_fix)
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
str(noShow)
str(noShow)
library(dplyr)
noShow <- select(noShow, -ApointmentData)
str(noShow)
table(noShow$Appointmentregistration)
table(noShow$AppointmentRegistration)
str_split_fixed(noShow$AppointmentRegistration, "T", "Z")
noShow$str_split_fixed(noShow$AppointmentRegistration, "T", 2)
str_split_fixed(noShow$AppointmentRegistration, "T", 2)
cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
noShow
str(noShow)
cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
str(noShow)
names(noShow)[names(noShow) == '1'] <- 'registrationDate'
names(noShow)[names(noShow) == '2'] <- 'registrationTime'
str(noShow)
noShow$registrationTime <- str_sub(noShow$registrationTime, 1, 8)
noShow$registrationTime
noShow$registrationDate <- as.Date(noShow$registrationDate)
str(noShow)
names(noShow)[names(noShow) == 'ApoitmentData_fix'] <- 'appoitmentDate'
str(noShow)
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'appoitmentDate'
str(noShow)
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
str(noShow)
names(noShow)[names(noShow) == 'appoitmentDate'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == 'registrationTime'] <- 'RegistrationTime'
names(noShow)[names(noShow) == 'registrationDate'] <- 'RegistrationDate'
str(noShow)
table(noShow$Status)
dim(noShow)
sum(is.na(noShow[1:17]))
sum(is.na(noShow[1]))
sum(is.na(noShow[2]))
sum(is.na(noShow[3]))
sum(is.na(noShow[4]))
sum(is.na(noShow[6]))
sum(!is.na(noShow[1]))
sum(!is.na(noShow[1:17]))
for (i in 17) {
print(i + "" + sum(!is.na(noShow[i])))
}
for (i in 17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print(k + ". " + l)
}
for (i in 17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print("k" + ". " + "l")
}
for (i in 17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print("k" + ". " + "l")
}
for (i in 1:17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print("k" + ". " + "l")
}
print(c(k,l))
for (i in 1:17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print(c(k,l))
}
summary(noShow)
noShow$RegistrationTime <- as.Date(noShow$RegistrationTime)
str(noShow)
noShow$registrationTime <- str_sub(noShow$registrationTime, 1, 2)
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
str(noShow)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
str(noShow)
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
library(stringr)
library(dplyr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'appoitmentDate'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationTime'
names(noShow)[names(noShow) == '2'] <- 'RegistrationDate'
#From the registrationTime we only save the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
str(noShow)
for (i in 1:17) {
k <- as.character(i)
l <- as.character(sum(!is.na(noShow[i])))
print(c(k,l))
}
str(noShow)
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
library(stringr)
library(dplyr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
str(noShow)
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationTime'
names(noShow)[names(noShow) == '2'] <- 'RegistrationDate'
str(noShow)
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
str(noShow)
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
library(stringr)
library(dplyr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
str(noShow)
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
str(noShow)
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
str(noShow)
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
str(noShow)
table(AwaitingTime)
table(noShow$AwaitingTime)
str(noShow)
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
table(noShow$Status)
table(noShow$Status[noShow$Status == 1])
table(noShow$Status[,noShow$Status == 1])
table(noShow$Status[noShow$Status == 1,])
noShow$Status
noShow$Status[noShow$Status == 1]
noShow$Status[noShow$Status == 2]
noShow$Status[noShow$Status == 2,]
noShow$Status[noShow$Status == 2]
str(noShow)
noShow$Status[noShow$Status == "No-Show"]
str(noShow)
noShow$Status[noShow$Status == "No-Show"] <- 1
noShow$Status[noShow$Status == "Show-up"] <- 0
noShow$Status
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
library(stringr)
library(dplyr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
noShow$Status_dgt[noShow$Status == "No-Show"] <- 1
noShow$Status_dgt[noShow$Status == "Show-Up"] <- 0
noShow$Status_dgt
table(noShow$Status_dgt)
table(noShow$Status)
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
str(noShow)
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
library(stringr)
library(dplyr)
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
str(noShow)
noShow <- select(noShow, -Status)
str(noShow)
names(noShow)[names(noShow) == 'Status01'] <- 'Status'
noShow$Status <- as.factor(noShow$Status, labels = c("show-up", "no-show"))
noShow$Status <- as.factor(noShow$Status, levels = c("show-up", "no-show"))
noShow$Status <- factor(noShow$Status, labels = c("show-up", "no-show"))
table(noShow$Status)
str(noShow)
names(noShow)[names(noShow) == 'Alcoolism'] <- 'Alchoholism'
names(noShow)[names(noShow) == 'HiperTension'] <- 'Hypertension'
names(noShow)[names(noShow) == 'Handcap'] <- 'Handicap'
str(noShow)
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
library(stringr)
library(dplyr)
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Our Y variable Status (Show-up, no-show) is coded with values 1 and 2. We recode it to 01
#variable and delete old one
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
noShow <- select(noShow, -Status)
#rename Status variable to original and transform it back to factor
names(noShow)[names(noShow) == 'Status01'] <- 'Status'
noShow$Status <- factor(noShow$Status, labels = c("show-up", "no-show"))
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#We also fix some spelling errors from the dataset
names(noShow)[names(noShow) == 'Alcoolism'] <- 'Alchoholism'
names(noShow)[names(noShow) == 'HiperTension'] <- 'Hypertension'
names(noShow)[names(noShow) == 'Handcap'] <- 'Handicap'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
noShow$Status <- factor(noShow$Status, levels = c(0,1), labels = c("show-up", "no-show"))
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
library(stringr)
library(dplyr)
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Our Y variable Status (Show-up, no-show) is coded with values 1 and 2. We recode it to 01
#variable and delete old one
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
noShow <- select(noShow, -Status)
#rename Status variable to original and transform it back to factor
names(noShow)[names(noShow) == 'Status01'] <- 'Status'
noShow$Status <- factor(noShow$Status, levels = c(0,1), labels = c("show-up", "no-show"))
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#We also fix some spelling errors from the dataset
names(noShow)[names(noShow) == 'Alcoolism'] <- 'Alchoholism'
names(noShow)[names(noShow) == 'HiperTension'] <- 'Hypertension'
names(noShow)[names(noShow) == 'Handcap'] <- 'Handicap'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
str(noShow)
?as.factor
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
library(stringr)
library(dplyr)
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Our Y variable Status (Show-up, no-show) is coded with values 1 and 2. We recode it to 01
#variable and delete old one
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
noShow <- select(noShow, -Status)
#rename Status variable to original and transform it back to factor
names(noShow)[names(noShow) == 'Status01'] <- 'Status'
noShow$Status <- as.factor(noShow$Status, levels = c(0,1), labels = c("show-up", "no-show"))
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#We also fix some spelling errors from the dataset
names(noShow)[names(noShow) == 'Alcoolism'] <- 'Alchoholism'
names(noShow)[names(noShow) == 'HiperTension'] <- 'Hypertension'
names(noShow)[names(noShow) == 'Handcap'] <- 'Handicap'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
noShow$Status <- as.factor(noShow$Status)
str(noShow)
levels(noShow$Status) <- c("Show-Up", "No-Show")
str(noShow)
noShow$Status <- as.factor(noShow$Status)
str(noShow)
#Let's set working directory for correct one
setwd("C:/Users/Julius/yliopisto/kansis/datascience/IODS-final")
library(stringr)
library(dplyr)
#load dataset
noShow <- read.csv("data/No-show-Issue-Comma-300k.csv")
#Our Y variable Status (Show-up, no-show) is coded with values 1 and 2. We recode it to 01
#variable and delete old one
noShow$Status01[noShow$Status == "No-Show"] <- 1
noShow$Status01[noShow$Status == "Show-Up"] <- 0
noShow <- select(noShow, -Status)
#rename Status variable to original name
names(noShow)[names(noShow) == 'Status01'] <- 'Status'
#Variable Apointmentdata needs to be cleaned. It's values are "yyyy-mm-dd+T+00:00:00Z"
#All the variables have same time stamp of 00:00:00 and Z in the end which is useless
#so we delete them to be able to access dates.
noShow$ApointmentData_fix <- str_sub(noShow$ApointmentData, 1, 10)
#transform chr variable to Date structure
noShow$ApointmentData_fix <- as.Date(noShow$ApointmentData_fix)
#delete old now useless variable
noShow <- select(noShow, -ApointmentData)
#AppointmentRegistration has variables in the form of "yyyy-mm-dd+T+hh:min:secZ"
#This has timestamp compared to earlier one so we will get two variables for this compared
#Appointmentregistration: one for date and for time of the day when the registration was done
noShow <- cbind(noShow, str_split_fixed(noShow$AppointmentRegistration, "T", 2))
#Str_split_fixed gives variable '1' and '2' for new variable names so we rename them for correct ones
#We also fix appoitmentdata_fix to AppointmentDate
names(noShow)[names(noShow) == 'ApointmentData_fix'] <- 'AppoitmentDate'
names(noShow)[names(noShow) == '1'] <- 'RegistrationDate'
names(noShow)[names(noShow) == '2'] <- 'RegistrationTime'
#We also fix some spelling errors from the dataset
names(noShow)[names(noShow) == 'Alcoolism'] <- 'Alchoholism'
names(noShow)[names(noShow) == 'HiperTension'] <- 'Hypertension'
names(noShow)[names(noShow) == 'Handcap'] <- 'Handicap'
#From the registrationTime we only need the hour.
noShow$RegistrationTime <- str_sub(noShow$RegistrationTime, 1, 2)
#transform both to to correct from chr structure
noShow$RegistrationDate <- as.Date(noShow$RegistrationDate)
noShow$RegistrationTime <- as.integer(noShow$RegistrationTime)
#Now we can delete AppointmentRegistration variable
noShow <- select(noShow, -AppointmentRegistration)
str(noShow)
